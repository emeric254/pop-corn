user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

# load modules
include /etc/nginx/modules/*.conf;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # declare our locations
    server {
        listen 8080;

        root /usr/share/nginx/html;

        location / {
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            # no cache of the index
            expires -1y;
            add_header Pragma "no-cache";
            add_header Cache-Control "public";
        }
        location ~* \.(js|css|png|jpg|jpeg|svg|webp|avif|gif|ico|json)$ {
            expires 10m;
            add_header Cache-Control "public, immutable";
        }
    }

    ## Gzip
    # see http://nginx.org/en/docs/http/ngx_http_gzip_module.html
    # Dynamic mode.
    gzip            on;
    gzip_vary       on;
    gzip_min_length 10240;  # 10ko
    gzip_comp_level 6;
    gzip_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;
    # Static mode.
    gzip_static on;

    ## Brotli
    # see https://github.com/google/ngx_brotli
    # Dynamic mode.
    brotli on;
    brotli_min_length 10240;  # 10ko
    brotli_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss;
    # Static mode.
    brotli_static on;
}
